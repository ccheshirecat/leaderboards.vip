// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id            String   @id @default(uuid())
  name          String
  slug          String   @unique
  customDomain  String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  settings      Json     @default("{}")
  casino        String
  apiConfig     Json
  users         User[]
  leaderboardEntries LeaderboardEntry[]
  leaderboards  Leaderboard[]

  @@index([createdAt])
}

model User {
  id              String     @id @default(uuid())
  tenantId        String
  casinoPlayerId  String?
  casino          String?
  username        String?
  email           String?    @unique
  password        String?
  referredBy      String?
  referralCode    String     @unique @default(uuid())
  role            String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  pointsBalance   Float      @default(0)
  tenant          Tenant     @relation(fields: [tenantId], references: [id])
  leaderboardEntries LeaderboardEntry[]

  @@index([tenantId, role])
  @@index([referredBy])
  @@index([casinoPlayerId, casino])
  @@unique([tenantId, casinoPlayerId, casino])
}

model LeaderboardEntry {
  id            String   @id @default(uuid())
  tenantId      String
  userId        String?
  casinoPlayerId String
  casino        String
  wagerAmount   Float
  rank          Int
  timestamp     DateTime
  data          Json
  tenant        Tenant   @relation(fields: [tenantId], references: [id])
  user          User?    @relation(fields: [userId], references: [id])

  @@index([tenantId, timestamp])
  @@index([casinoPlayerId, casino])
  @@unique([tenantId, casinoPlayerId, casino, timestamp])
}

model Leaderboard {
  id              String   @id @default(uuid())
  tenantId        String
  casino          String
  lastFetched     DateTime @default(now())
  leaderboardConfig Json    @default("{}")
  data            Json
  tenant          Tenant   @relation(fields: [tenantId], references: [id])

  @@index([tenantId, casino])
  @@unique([tenantId, casino])
}
